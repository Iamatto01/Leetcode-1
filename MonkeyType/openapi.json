{
  "openapi": "3.1.0",
  "info": {
    "title": "Monkeytype API",
    "description": "Documentation for the endpoints provided by the Monkeytype API server.\n\nNote that authentication is performed with the Authorization HTTP header in the format `Authorization: ApeKey YOUR_APE_KEY`\n\nThere is a rate limit of `30 requests per minute` across all endpoints with some endpoints being more strict. Rate limit rates are shared across all ape keys.",
    "version": "2.0.0",
    "termsOfService": "https://monkeytype.com/terms-of-service",
    "contact": {
      "name": "Support",
      "email": "support@monkeytype.com"
    },
    "x-logo": {
      "url": "https://monkeytype.com/images/mtfulllogo.png"
    },
    "license": {
      "name": "GPL-3.0",
      "url": "https://www.gnu.org/licenses/gpl-3.0.html"
    }
  },
  "servers": [
    {
      "url": "https://api.monkeytype.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "User account data.",
      "x-displayName": "Users",
      "x-public": "yes"
    },
    {
      "name": "results",
      "description": "User test results",
      "x-displayName": "Test results",
      "x-public": "yes"
    },
    {
      "name": "public",
      "description": "Public endpoints such as typing stats.",
      "x-displayName": "Public",
      "x-public": "yes"
    },
    {
      "name": "leaderboards",
      "description": "All-time and daily leaderboards of the fastest typers.",
      "x-displayName": "Leaderboards"
    },
    {
      "name": "psas",
      "description": "Public service announcements.",
      "x-displayName": "PSAs",
      "x-public": "yes"
    },
    {
      "name": "quotes",
      "description": "Quote ratings and new quote submissions",
      "x-displayName": "Quotes",
      "x-public": "yes"
    },
    {
      "name": "configuration",
      "description": "Server configuration",
      "x-displayName": "Server configuration",
      "x-public": "yes"
    },
    {
      "name": "webhooks",
      "description": "Endpoints for incoming webhooks.",
      "x-displayName": "Webhooks",
      "x-public": "yes"
    }
  ],
  "paths": {
    "/psas": {
      "get": {
        "description": "Get list of public service announcements.\n\n**Rate limit:** This operation can be called up to 60 times per minute for regular users.\n\n",
        "summary": "get psas",
        "tags": [
          "psas"
        ],
        "parameters": [],
        "operationId": "psas.get",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9_]+$"
                          },
                          "message": {
                            "type": "string"
                          },
                          "date": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "level": {
                            "type": "integer"
                          },
                          "sticky": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "_id",
                          "message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    },
    "/public/speedHistogram": {
      "get": {
        "description": "get number of users personal bests grouped by wpm level (multiples of ten).\n\n**Rate limit:** This operation can be called up to 60 times per minute for regular users.\n\n",
        "summary": "get speed histogram",
        "tags": [
          "public"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "maxLength": 50,
                  "pattern": "^[a-zA-Z0-9_+]+$"
                }
              }
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "time",
                    "words",
                    "quote",
                    "custom",
                    "zen"
                  ]
                }
              }
            }
          },
          {
            "name": "mode2",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "type": "string",
                          "pattern": "^\\d+$"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "zen"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "custom"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ],
        "operationId": "public.getSpeedHistogram",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "integer"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    },
    "/public/typingStats": {
      "get": {
        "description": "get number of tests and time users spend typing.\n\n**Rate limit:** This operation can be called up to 60 times per minute for regular users.\n\n",
        "summary": "get typing stats",
        "tags": [
          "public"
        ],
        "parameters": [],
        "operationId": "public.getTypingStats",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "timeTyping": {
                          "type": "number",
                          "minimum": 0
                        },
                        "testsCompleted": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "testsStarted": {
                          "type": "integer",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "timeTyping",
                        "testsCompleted",
                        "testsStarted"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    },
    "/leaderboards": {
      "get": {
        "description": "Get all-time leaderboard.\n\n**Rate limit:** This operation can be called up to 500 times per hour for regular users.\n\n",
        "summary": "get leaderboard",
        "tags": [
          "leaderboards"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "maxLength": 50,
                  "pattern": "^[a-zA-Z0-9_+]+$"
                }
              }
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "time",
                    "words",
                    "quote",
                    "custom",
                    "zen"
                  ]
                }
              }
            }
          },
          {
            "name": "mode2",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "type": "string",
                          "pattern": "^\\d+$"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "zen"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "custom"
                      ]
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 50
                }
              }
            }
          }
        ],
        "operationId": "leaderboards.get",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "wpm": {
                            "type": "number",
                            "minimum": 0
                          },
                          "acc": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "timestamp": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "raw": {
                            "type": "number",
                            "minimum": 0
                          },
                          "consistency": {
                            "type": "number",
                            "minimum": 0
                          },
                          "uid": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "discordId": {
                            "type": "string"
                          },
                          "discordAvatar": {
                            "type": "string"
                          },
                          "rank": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "badgeId": {
                            "type": "integer"
                          },
                          "isPremium": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "wpm",
                          "acc",
                          "timestamp",
                          "raw",
                          "uid",
                          "name",
                          "rank"
                        ]
                      }
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    },
    "/leaderboards/rank": {
      "get": {
        "description": "Get the rank of the current user on the all-time leaderboard.\n\n**Rate limit:** This operation can be called up to 500 times per hour for regular users.\n\n",
        "summary": "get leaderboard rank",
        "tags": [
          "leaderboards"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "maxLength": 50,
                  "pattern": "^[a-zA-Z0-9_+]+$"
                }
              }
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "time",
                    "words",
                    "quote",
                    "custom",
                    "zen"
                  ]
                }
              }
            }
          },
          {
            "name": "mode2",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "type": "string",
                          "pattern": "^\\d+$"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "zen"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "custom"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ],
        "operationId": "leaderboards.getRank",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "rank": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "entry": {
                          "type": "object",
                          "properties": {
                            "wpm": {
                              "type": "number",
                              "minimum": 0
                            },
                            "acc": {
                              "type": "number",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "timestamp": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "raw": {
                              "type": "number",
                              "minimum": 0
                            },
                            "consistency": {
                              "type": "number",
                              "minimum": 0
                            },
                            "uid": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "discordId": {
                              "type": "string"
                            },
                            "discordAvatar": {
                              "type": "string"
                            },
                            "rank": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "badgeId": {
                              "type": "integer"
                            },
                            "isPremium": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "wpm",
                            "acc",
                            "timestamp",
                            "raw",
                            "uid",
                            "name",
                            "rank"
                          ]
                        }
                      },
                      "required": [
                        "count"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApeKey": []
          }
        ]
      }
    },
    "/leaderboards/daily": {
      "get": {
        "description": "Get daily leaderboard.\n\n**Rate limit:** This operation can be called up to 500 times per hour for regular users.\n\n**Required configuration:** This operation can only be called if the [configuration](#tag/configuration/operation/configuration.get) for  `dailyLeaderboards.enabled` is `true`.\n\n",
        "summary": "get daily leaderboard",
        "tags": [
          "leaderboards"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "maxLength": 50,
                  "pattern": "^[a-zA-Z0-9_+]+$"
                }
              }
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "time",
                    "words",
                    "quote",
                    "custom",
                    "zen"
                  ]
                }
              }
            }
          },
          {
            "name": "mode2",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "type": "string",
                          "pattern": "^\\d+$"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "zen"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "custom"
                      ]
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "daysBefore",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "enum": [
                    1
                  ]
                }
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 50
                }
              }
            }
          }
        ],
        "operationId": "leaderboards.getDaily",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "wpm": {
                            "type": "number",
                            "minimum": 0
                          },
                          "acc": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "timestamp": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "raw": {
                            "type": "number",
                            "minimum": 0
                          },
                          "consistency": {
                            "type": "number",
                            "minimum": 0
                          },
                          "uid": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "discordId": {
                            "type": "string"
                          },
                          "discordAvatar": {
                            "type": "string"
                          },
                          "rank": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "badgeId": {
                            "type": "integer"
                          },
                          "isPremium": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "wpm",
                          "acc",
                          "timestamp",
                          "raw",
                          "uid",
                          "name",
                          "rank"
                        ]
                      }
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    },
    "/leaderboards/xp/weekly": {
      "get": {
        "description": "Get weekly xp leaderboard.\n\n**Rate limit:** This operation can be called up to 500 times per hour for regular users.\n\n**Required configuration:** This operation can only be called if the [configuration](#tag/configuration/operation/configuration.get) for  `leaderboards.weeklyXp.enabled` is `true`.\n\n",
        "summary": "get weekly xp leaderboard",
        "tags": [
          "leaderboards"
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 50
                }
              }
            }
          },
          {
            "name": "weeksBefore",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "enum": [
                    1
                  ]
                }
              }
            }
          }
        ],
        "operationId": "leaderboards.getWeeklyXp",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "discordId": {
                            "type": "string"
                          },
                          "discordAvatar": {
                            "type": "string"
                          },
                          "badgeId": {
                            "type": "integer"
                          },
                          "lastActivityTimestamp": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "timeTypedSeconds": {
                            "type": "number",
                            "minimum": 0
                          },
                          "rank": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "totalXp": {
                            "type": "integer",
                            "minimum": 0
                          }
                        },
                        "required": [
                          "uid",
                          "name",
                          "lastActivityTimestamp",
                          "timeTypedSeconds",
                          "rank",
                          "totalXp"
                        ]
                      }
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    },
    "/results": {
      "get": {
        "description": "Gets up to 1000 results.\n\n**Rate limit:** This operation can be called up to 60 times per hour for regular users and up to 30 times per day with ApeKeys.\n\n",
        "summary": "get results",
        "tags": [
          "results"
        ],
        "parameters": [
          {
            "name": "onOrAfterTimestamp",
            "in": "query",
            "description": "Timestamp of the earliest result to fetch. If omitted the most recent results are fetched.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "minimum": 1589428800000
                }
              }
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the item at which to begin the response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit results to the given amount.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1000
                }
              }
            }
          }
        ],
        "operationId": "results.get",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "wpm": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 420
                          },
                          "rawWpm": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 420
                          },
                          "charStats": {},
                          "acc": {
                            "type": "number",
                            "minimum": 50,
                            "maximum": 100
                          },
                          "mode": {
                            "type": "string",
                            "enum": [
                              "time",
                              "words",
                              "quote",
                              "custom",
                              "zen"
                            ]
                          },
                          "mode2": {
                            "oneOf": [
                              {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "pattern": "^\\d+$"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "zen"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "custom"
                                ]
                              }
                            ]
                          },
                          "quoteLength": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 3
                          },
                          "timestamp": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "testDuration": {
                            "type": "number",
                            "minimum": 1
                          },
                          "consistency": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "keyConsistency": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "chartData": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "wpm": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "minimum": 0
                                    },
                                    "maxItems": 122
                                  },
                                  "raw": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "minimum": 0
                                    },
                                    "maxItems": 122
                                  },
                                  "err": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "minimum": 0
                                    },
                                    "maxItems": 122
                                  }
                                },
                                "required": [
                                  "wpm",
                                  "raw",
                                  "err"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "toolong"
                                ]
                              }
                            ]
                          },
                          "uid": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9_]+$"
                          },
                          "restartCount": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "incompleteTestSeconds": {
                            "type": "number",
                            "minimum": 0
                          },
                          "afkDuration": {
                            "type": "number",
                            "minimum": 0
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9_]+$"
                            }
                          },
                          "bailedOut": {
                            "type": "boolean"
                          },
                          "blindMode": {
                            "type": "boolean"
                          },
                          "lazyMode": {
                            "type": "boolean"
                          },
                          "funbox": {
                            "type": "string",
                            "maxLength": 100,
                            "pattern": "[\\w#]+"
                          },
                          "language": {
                            "type": "string",
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z0-9_+]+$"
                          },
                          "difficulty": {
                            "type": "string",
                            "enum": [
                              "normal",
                              "expert",
                              "master"
                            ]
                          },
                          "numbers": {
                            "type": "boolean"
                          },
                          "punctuation": {
                            "type": "boolean"
                          },
                          "_id": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9_]+$"
                          },
                          "keySpacingStats": {
                            "type": "object",
                            "properties": {
                              "average": {
                                "type": "number",
                                "minimum": 0
                              },
                              "sd": {
                                "type": "number",
                                "minimum": 0
                              }
                            },
                            "required": [
                              "average",
                              "sd"
                            ]
                          },
                          "keyDurationStats": {
                            "type": "object",
                            "properties": {
                              "average": {
                                "type": "number",
                                "minimum": 0
                              },
                              "sd": {
                                "type": "number",
                                "minimum": 0
                              }
                            },
                            "required": [
                              "average",
                              "sd"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "isPb": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "wpm",
                          "rawWpm",
                          "charStats",
                          "acc",
                          "mode",
                          "mode2",
                          "timestamp",
                          "testDuration",
                          "consistency",
                          "keyConsistency",
                          "chartData",
                          "uid",
                          "_id",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApeKey": []
          }
        ]
      }
    },
    "/results/last": {
      "get": {
        "description": "Gets a user's last saved result.\n\n**Rate limit:** This operation can be called up to 60 times per hour for regular users.\n\n",
        "summary": "get last result",
        "tags": [
          "results"
        ],
        "parameters": [],
        "operationId": "results.getLast",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "wpm": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 420
                        },
                        "rawWpm": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 420
                        },
                        "charStats": {},
                        "acc": {
                          "type": "number",
                          "minimum": 50,
                          "maximum": 100
                        },
                        "mode": {
                          "type": "string",
                          "enum": [
                            "time",
                            "words",
                            "quote",
                            "custom",
                            "zen"
                          ]
                        },
                        "mode2": {
                          "oneOf": [
                            {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "pattern": "^\\d+$"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "zen"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "custom"
                              ]
                            }
                          ]
                        },
                        "quoteLength": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 3
                        },
                        "timestamp": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "testDuration": {
                          "type": "number",
                          "minimum": 1
                        },
                        "consistency": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "keyConsistency": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "chartData": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "wpm": {
                                  "type": "array",
                                  "items": {
                                    "type": "number",
                                    "minimum": 0
                                  },
                                  "maxItems": 122
                                },
                                "raw": {
                                  "type": "array",
                                  "items": {
                                    "type": "number",
                                    "minimum": 0
                                  },
                                  "maxItems": 122
                                },
                                "err": {
                                  "type": "array",
                                  "items": {
                                    "type": "number",
                                    "minimum": 0
                                  },
                                  "maxItems": 122
                                }
                              },
                              "required": [
                                "wpm",
                                "raw",
                                "err"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "toolong"
                              ]
                            }
                          ]
                        },
                        "uid": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_]+$"
                        },
                        "restartCount": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "incompleteTestSeconds": {
                          "type": "number",
                          "minimum": 0
                        },
                        "afkDuration": {
                          "type": "number",
                          "minimum": 0
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9_]+$"
                          }
                        },
                        "bailedOut": {
                          "type": "boolean"
                        },
                        "blindMode": {
                          "type": "boolean"
                        },
                        "lazyMode": {
                          "type": "boolean"
                        },
                        "funbox": {
                          "type": "string",
                          "maxLength": 100,
                          "pattern": "[\\w#]+"
                        },
                        "language": {
                          "type": "string",
                          "maxLength": 50,
                          "pattern": "^[a-zA-Z0-9_+]+$"
                        },
                        "difficulty": {
                          "type": "string",
                          "enum": [
                            "normal",
                            "expert",
                            "master"
                          ]
                        },
                        "numbers": {
                          "type": "boolean"
                        },
                        "punctuation": {
                          "type": "boolean"
                        },
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_]+$"
                        },
                        "keySpacingStats": {
                          "type": "object",
                          "properties": {
                            "average": {
                              "type": "number",
                              "minimum": 0
                            },
                            "sd": {
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "average",
                            "sd"
                          ]
                        },
                        "keyDurationStats": {
                          "type": "object",
                          "properties": {
                            "average": {
                              "type": "number",
                              "minimum": 0
                            },
                            "sd": {
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "average",
                            "sd"
                          ]
                        },
                        "name": {
                          "type": "string"
                        },
                        "isPb": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "wpm",
                        "rawWpm",
                        "charStats",
                        "acc",
                        "mode",
                        "mode2",
                        "timestamp",
                        "testDuration",
                        "consistency",
                        "keyConsistency",
                        "chartData",
                        "uid",
                        "_id",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApeKey": []
          }
        ]
      }
    },
    "/configuration": {
      "get": {
        "description": "Get server configuration.\n\n",
        "summary": "get configuration",
        "tags": [
          "configuration"
        ],
        "parameters": [],
        "operationId": "configuration.get",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "maintenance": {
                          "type": "boolean"
                        },
                        "dev": {
                          "type": "object",
                          "properties": {
                            "responseSlowdownMs": {
                              "type": "integer",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "responseSlowdownMs"
                          ]
                        },
                        "quotes": {
                          "type": "object",
                          "properties": {
                            "reporting": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "maxReports": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "contentReportLimit": {
                                  "type": "integer",
                                  "minimum": 0
                                }
                              },
                              "required": [
                                "enabled",
                                "maxReports",
                                "contentReportLimit"
                              ]
                            },
                            "submissionsEnabled": {
                              "type": "boolean"
                            },
                            "maxFavorites": {
                              "type": "integer",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "reporting",
                            "submissionsEnabled",
                            "maxFavorites"
                          ]
                        },
                        "results": {
                          "type": "object",
                          "properties": {
                            "savingEnabled": {
                              "type": "boolean"
                            },
                            "objectHashCheckEnabled": {
                              "type": "boolean"
                            },
                            "filterPresets": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "maxPresetsPerUser": {
                                  "type": "integer",
                                  "minimum": 0
                                }
                              },
                              "required": [
                                "enabled",
                                "maxPresetsPerUser"
                              ]
                            },
                            "limits": {
                              "type": "object",
                              "properties": {
                                "regularUser": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "premiumUser": {
                                  "type": "integer",
                                  "minimum": 0
                                }
                              },
                              "required": [
                                "regularUser",
                                "premiumUser"
                              ]
                            },
                            "maxBatchSize": {
                              "type": "integer",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "savingEnabled",
                            "objectHashCheckEnabled",
                            "filterPresets",
                            "limits",
                            "maxBatchSize"
                          ]
                        },
                        "users": {
                          "type": "object",
                          "properties": {
                            "signUp": {
                              "type": "boolean"
                            },
                            "lastHashesCheck": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "maxHashes": {
                                  "type": "integer",
                                  "minimum": 0
                                }
                              },
                              "required": [
                                "enabled",
                                "maxHashes"
                              ]
                            },
                            "autoBan": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "maxCount": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "maxHours": {
                                  "type": "integer",
                                  "minimum": 0
                                }
                              },
                              "required": [
                                "enabled",
                                "maxCount",
                                "maxHours"
                              ]
                            },
                            "profiles": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "enabled"
                              ]
                            },
                            "discordIntegration": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "enabled"
                              ]
                            },
                            "xp": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "funboxBonus": {
                                  "type": "number"
                                },
                                "gainMultiplier": {
                                  "type": "number"
                                },
                                "maxDailyBonus": {
                                  "type": "number"
                                },
                                "minDailyBonus": {
                                  "type": "number"
                                },
                                "streak": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean"
                                    },
                                    "maxStreakDays": {
                                      "type": "number",
                                      "minimum": 0
                                    },
                                    "maxStreakMultiplier": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "enabled",
                                    "maxStreakDays",
                                    "maxStreakMultiplier"
                                  ]
                                }
                              },
                              "required": [
                                "enabled",
                                "funboxBonus",
                                "gainMultiplier",
                                "maxDailyBonus",
                                "minDailyBonus",
                                "streak"
                              ]
                            },
                            "inbox": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "maxMail": {
                                  "type": "integer",
                                  "minimum": 0
                                }
                              },
                              "required": [
                                "enabled",
                                "maxMail"
                              ]
                            },
                            "premium": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "enabled"
                              ]
                            }
                          },
                          "required": [
                            "signUp",
                            "lastHashesCheck",
                            "autoBan",
                            "profiles",
                            "discordIntegration",
                            "xp",
                            "inbox",
                            "premium"
                          ]
                        },
                        "admin": {
                          "type": "object",
                          "properties": {
                            "endpointsEnabled": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "endpointsEnabled"
                          ]
                        },
                        "apeKeys": {
                          "type": "object",
                          "properties": {
                            "endpointsEnabled": {
                              "type": "boolean"
                            },
                            "acceptKeys": {
                              "type": "boolean"
                            },
                            "maxKeysPerUser": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "apeKeyBytes": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "apeKeySaltRounds": {
                              "type": "integer",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "endpointsEnabled",
                            "acceptKeys",
                            "maxKeysPerUser",
                            "apeKeyBytes",
                            "apeKeySaltRounds"
                          ]
                        },
                        "rateLimiting": {
                          "type": "object",
                          "properties": {
                            "badAuthentication": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "penalty": {
                                  "type": "number"
                                },
                                "flaggedStatusCodes": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "minimum": 0
                                  }
                                }
                              },
                              "required": [
                                "enabled",
                                "penalty",
                                "flaggedStatusCodes"
                              ]
                            }
                          },
                          "required": [
                            "badAuthentication"
                          ]
                        },
                        "dailyLeaderboards": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            },
                            "leaderboardExpirationTimeInDays": {
                              "type": "number",
                              "minimum": 0
                            },
                            "maxResults": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "validModeRules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "mode": {
                                    "type": "string"
                                  },
                                  "mode2": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "language",
                                  "mode",
                                  "mode2"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "scheduleRewardsModeRules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "mode": {
                                    "type": "string"
                                  },
                                  "mode2": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "language",
                                  "mode",
                                  "mode2"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "topResultsToAnnounce": {
                              "type": "integer",
                              "minimum": 0,
                              "exclusiveMinimum": 0
                            },
                            "xpRewardBrackets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "minRank": {
                                    "type": "integer",
                                    "minimum": 0
                                  },
                                  "maxRank": {
                                    "type": "integer",
                                    "minimum": 0
                                  },
                                  "minReward": {
                                    "type": "integer",
                                    "minimum": 0
                                  },
                                  "maxReward": {
                                    "type": "integer",
                                    "minimum": 0
                                  }
                                },
                                "required": [
                                  "minRank",
                                  "maxRank",
                                  "minReward",
                                  "maxReward"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          "required": [
                            "enabled",
                            "leaderboardExpirationTimeInDays",
                            "maxResults",
                            "validModeRules",
                            "scheduleRewardsModeRules",
                            "topResultsToAnnounce",
                            "xpRewardBrackets"
                          ]
                        },
                        "leaderboards": {
                          "type": "object",
                          "properties": {
                            "weeklyXp": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                },
                                "expirationTimeInDays": {
                                  "type": "number",
                                  "minimum": 0
                                },
                                "xpRewardBrackets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "minRank": {
                                        "type": "integer",
                                        "minimum": 0
                                      },
                                      "maxRank": {
                                        "type": "integer",
                                        "minimum": 0
                                      },
                                      "minReward": {
                                        "type": "integer",
                                        "minimum": 0
                                      },
                                      "maxReward": {
                                        "type": "integer",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "minRank",
                                      "maxRank",
                                      "minReward",
                                      "maxReward"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "required": [
                                "enabled",
                                "expirationTimeInDays",
                                "xpRewardBrackets"
                              ]
                            }
                          },
                          "required": [
                            "weeklyXp"
                          ]
                        }
                      },
                      "required": [
                        "maintenance",
                        "dev",
                        "quotes",
                        "results",
                        "users",
                        "admin",
                        "apeKeys",
                        "rateLimiting",
                        "dailyLeaderboards",
                        "leaderboards"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    },
    "/users/checkName/{name}": {
      "get": {
        "description": "Checks to see if a username is available.\n\n**Rate limit:** This operation can be called up to 60 times per minute for regular users.\n\n",
        "summary": "check name",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 16,
              "pattern": "^[\\da-zA-Z_-]+$"
            }
          }
        ],
        "operationId": "users.getNameAvailability",
        "responses": {
          "200": {
            "description": "Name is available",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Name is available"
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "409": {
            "description": "Name is not available",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Name is not available"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    },
    "/users/personalBests": {
      "get": {
        "description": "Get user's personal bests.\n\n**Rate limit:** This operation can be called up to 60 times per hour for regular users.\n\n",
        "summary": "get personal bests",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "time",
                    "words",
                    "quote",
                    "custom",
                    "zen"
                  ]
                }
              }
            }
          },
          {
            "name": "mode2",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "oneOf": [
                        {
                          "type": "string",
                          "pattern": "^\\d+$"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "zen"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "custom"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ],
        "operationId": "users.getPersonalBests",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "acc": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "consistency": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "difficulty": {
                          "type": "string",
                          "enum": [
                            "normal",
                            "expert",
                            "master"
                          ]
                        },
                        "lazyMode": {
                          "type": "boolean"
                        },
                        "language": {
                          "type": "string",
                          "maxLength": 100,
                          "pattern": "[\\w+]+"
                        },
                        "punctuation": {
                          "type": "boolean"
                        },
                        "numbers": {
                          "type": "boolean"
                        },
                        "raw": {
                          "type": "number",
                          "minimum": 0
                        },
                        "wpm": {
                          "type": "number",
                          "minimum": 0
                        },
                        "timestamp": {
                          "type": "number",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "acc",
                        "consistency",
                        "difficulty",
                        "language",
                        "raw",
                        "wpm",
                        "timestamp"
                      ],
                      "nullable": true
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApeKey": []
          }
        ]
      }
    },
    "/users/tags": {
      "get": {
        "description": "Get the users tags.\n\n**Rate limit:** This operation can be called up to 60 times per hour for regular users.\n\n",
        "summary": "get tags",
        "tags": [
          "users"
        ],
        "parameters": [],
        "operationId": "users.getTags",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9_]+$"
                          },
                          "name": {
                            "type": "string"
                          },
                          "personalBests": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "acc": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "consistency": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "difficulty": {
                                        "type": "string",
                                        "enum": [
                                          "normal",
                                          "expert",
                                          "master"
                                        ]
                                      },
                                      "lazyMode": {
                                        "type": "boolean"
                                      },
                                      "language": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "pattern": "[\\w+]+"
                                      },
                                      "punctuation": {
                                        "type": "boolean"
                                      },
                                      "numbers": {
                                        "type": "boolean"
                                      },
                                      "raw": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "wpm": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "timestamp": {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "acc",
                                      "consistency",
                                      "difficulty",
                                      "language",
                                      "raw",
                                      "wpm",
                                      "timestamp"
                                    ]
                                  }
                                }
                              },
                              "words": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "acc": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "consistency": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "difficulty": {
                                        "type": "string",
                                        "enum": [
                                          "normal",
                                          "expert",
                                          "master"
                                        ]
                                      },
                                      "lazyMode": {
                                        "type": "boolean"
                                      },
                                      "language": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "pattern": "[\\w+]+"
                                      },
                                      "punctuation": {
                                        "type": "boolean"
                                      },
                                      "numbers": {
                                        "type": "boolean"
                                      },
                                      "raw": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "wpm": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "timestamp": {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "acc",
                                      "consistency",
                                      "difficulty",
                                      "language",
                                      "raw",
                                      "wpm",
                                      "timestamp"
                                    ]
                                  }
                                }
                              },
                              "quote": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "acc": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "consistency": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "difficulty": {
                                        "type": "string",
                                        "enum": [
                                          "normal",
                                          "expert",
                                          "master"
                                        ]
                                      },
                                      "lazyMode": {
                                        "type": "boolean"
                                      },
                                      "language": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "pattern": "[\\w+]+"
                                      },
                                      "punctuation": {
                                        "type": "boolean"
                                      },
                                      "numbers": {
                                        "type": "boolean"
                                      },
                                      "raw": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "wpm": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "timestamp": {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "acc",
                                      "consistency",
                                      "difficulty",
                                      "language",
                                      "raw",
                                      "wpm",
                                      "timestamp"
                                    ]
                                  }
                                }
                              },
                              "custom": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "acc": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "consistency": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "difficulty": {
                                        "type": "string",
                                        "enum": [
                                          "normal",
                                          "expert",
                                          "master"
                                        ]
                                      },
                                      "lazyMode": {
                                        "type": "boolean"
                                      },
                                      "language": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "pattern": "[\\w+]+"
                                      },
                                      "punctuation": {
                                        "type": "boolean"
                                      },
                                      "numbers": {
                                        "type": "boolean"
                                      },
                                      "raw": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "wpm": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "timestamp": {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "acc",
                                      "consistency",
                                      "difficulty",
                                      "language",
                                      "raw",
                                      "wpm",
                                      "timestamp"
                                    ]
                                  }
                                }
                              },
                              "zen": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "acc": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "consistency": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "difficulty": {
                                        "type": "string",
                                        "enum": [
                                          "normal",
                                          "expert",
                                          "master"
                                        ]
                                      },
                                      "lazyMode": {
                                        "type": "boolean"
                                      },
                                      "language": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "pattern": "[\\w+]+"
                                      },
                                      "punctuation": {
                                        "type": "boolean"
                                      },
                                      "numbers": {
                                        "type": "boolean"
                                      },
                                      "raw": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "wpm": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "timestamp": {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "acc",
                                      "consistency",
                                      "difficulty",
                                      "language",
                                      "raw",
                                      "wpm",
                                      "timestamp"
                                    ]
                                  }
                                }
                              }
                            },
                            "required": [
                              "time",
                              "words",
                              "quote",
                              "custom",
                              "zen"
                            ]
                          }
                        },
                        "required": [
                          "_id",
                          "name",
                          "personalBests"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApeKey": []
          }
        ]
      }
    },
    "/users/stats": {
      "get": {
        "description": "Gets a user's typing stats data.\n\n**Rate limit:** This operation can be called up to 60 times per hour for regular users.\n\n",
        "summary": "get stats",
        "tags": [
          "users"
        ],
        "parameters": [],
        "operationId": "users.getStats",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "completedTests": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "startedTests": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "timeTyping": {
                          "type": "number",
                          "minimum": 0,
                          "description": "time typing in seconds"
                        }
                      }
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApeKey": []
          }
        ]
      }
    },
    "/users/{uidOrName}/profile": {
      "get": {
        "description": "Gets a user's profile.\n\n**Rate limit:** This operation can be called up to 100 times per hour for regular users.\n\n**Required configuration:** This operation can only be called if the [configuration](#tag/configuration/operation/configuration.get) for  `users.profiles.enabled` is `true`.\n\n",
        "summary": "get profile",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "uidOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isUid",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "default": false,
                  "oneOf": [
                    {
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 0
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                }
              }
            }
          }
        ],
        "operationId": "users.getProfile",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "banned": {
                          "type": "boolean"
                        },
                        "addedAt": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "discordId": {
                          "type": "string"
                        },
                        "discordAvatar": {
                          "type": "string"
                        },
                        "xp": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "lbOptOut": {
                          "type": "boolean"
                        },
                        "isPremium": {
                          "type": "boolean"
                        },
                        "inventory": {
                          "type": "object",
                          "properties": {
                            "badges": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "minimum": 0
                                  },
                                  "selected": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "id"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          "required": [
                            "badges"
                          ],
                          "additionalProperties": false
                        },
                        "allTimeLbs": {
                          "type": "object",
                          "properties": {
                            "time": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "rank": {
                                      "type": "integer",
                                      "minimum": 0
                                    },
                                    "count": {
                                      "type": "integer",
                                      "minimum": 0
                                    }
                                  },
                                  "required": [
                                    "count"
                                  ]
                                }
                              }
                            }
                          },
                          "required": [
                            "time"
                          ]
                        },
                        "typingStats": {
                          "type": "object",
                          "properties": {
                            "completedTests": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "startedTests": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "timeTyping": {
                              "type": "integer",
                              "minimum": 0
                            }
                          }
                        },
                        "personalBests": {
                          "type": "object",
                          "properties": {
                            "time": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "acc": {
                                      "type": "number",
                                      "minimum": 0,
                                      "maximum": 100
                                    },
                                    "consistency": {
                                      "type": "number",
                                      "minimum": 0,
                                      "maximum": 100
                                    },
                                    "difficulty": {
                                      "type": "string",
                                      "enum": [
                                        "normal",
                                        "expert",
                                        "master"
                                      ]
                                    },
                                    "lazyMode": {
                                      "type": "boolean"
                                    },
                                    "language": {
                                      "type": "string",
                                      "maxLength": 100,
                                      "pattern": "[\\w+]+"
                                    },
                                    "punctuation": {
                                      "type": "boolean"
                                    },
                                    "numbers": {
                                      "type": "boolean"
                                    },
                                    "raw": {
                                      "type": "number",
                                      "minimum": 0
                                    },
                                    "wpm": {
                                      "type": "number",
                                      "minimum": 0
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "minimum": 0
                                    }
                                  },
                                  "required": [
                                    "acc",
                                    "consistency",
                                    "difficulty",
                                    "language",
                                    "raw",
                                    "wpm",
                                    "timestamp"
                                  ]
                                }
                              }
                            },
                            "words": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "acc": {
                                      "type": "number",
                                      "minimum": 0,
                                      "maximum": 100
                                    },
                                    "consistency": {
                                      "type": "number",
                                      "minimum": 0,
                                      "maximum": 100
                                    },
                                    "difficulty": {
                                      "type": "string",
                                      "enum": [
                                        "normal",
                                        "expert",
                                        "master"
                                      ]
                                    },
                                    "lazyMode": {
                                      "type": "boolean"
                                    },
                                    "language": {
                                      "type": "string",
                                      "maxLength": 100,
                                      "pattern": "[\\w+]+"
                                    },
                                    "punctuation": {
                                      "type": "boolean"
                                    },
                                    "numbers": {
                                      "type": "boolean"
                                    },
                                    "raw": {
                                      "type": "number",
                                      "minimum": 0
                                    },
                                    "wpm": {
                                      "type": "number",
                                      "minimum": 0
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "minimum": 0
                                    }
                                  },
                                  "required": [
                                    "acc",
                                    "consistency",
                                    "difficulty",
                                    "language",
                                    "raw",
                                    "wpm",
                                    "timestamp"
                                  ]
                                }
                              }
                            }
                          },
                          "required": [
                            "time",
                            "words"
                          ]
                        },
                        "streak": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "maxStreak": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "details": {
                          "type": "object",
                          "properties": {
                            "bio": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "maxLength": 250
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    ""
                                  ]
                                }
                              ]
                            },
                            "keyboard": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "maxLength": 75
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    ""
                                  ]
                                }
                              ]
                            },
                            "socialProfiles": {
                              "type": "object",
                              "properties": {
                                "twitter": {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "maxLength": 20,
                                      "pattern": "^[0-9a-zA-Z_.-]+$"
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        ""
                                      ]
                                    }
                                  ]
                                },
                                "github": {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "maxLength": 39,
                                      "pattern": "^[0-9a-zA-Z_.-]+$"
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        ""
                                      ]
                                    }
                                  ]
                                },
                                "website": {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "format": "uri",
                                      "maxLength": 200
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        ""
                                      ]
                                    }
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "name",
                        "addedAt",
                        "typingStats",
                        "personalBests",
                        "streak",
                        "maxStreak"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "User not found"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    },
    "/users/forgotPasswordEmail": {
      "post": {
        "description": "Send a forgot password email.\n\n**Rate limit:** This operation can be called up to 1 times per minute for regular users.\n\n",
        "summary": "send forgot password email",
        "tags": [
          "users"
        ],
        "parameters": [],
        "operationId": "users.forgotPasswordEmail",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    },
    "/users/currentTestActivity": {
      "get": {
        "description": "Get test activity for the last up to 372 days for the current user .\n\n**Rate limit:** This operation can be called up to 60 times per hour for regular users.\n\n",
        "summary": "get current test activity",
        "tags": [
          "users"
        ],
        "parameters": [],
        "operationId": "users.getCurrentTestActivity",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "testsByDays": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": 0
                              },
                              {
                                "type": "string",
                                "format": "null",
                                "nullable": true
                              }
                            ],
                            "nullable": true
                          },
                          "description": "Number of tests by day. Last element of the array is on the date `lastDay`. `null` means no tests on that day."
                        },
                        "lastDay": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Timestamp of the last day included in the test activity"
                        }
                      },
                      "required": [
                        "testsByDays",
                        "lastDay"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApeKey": []
          }
        ]
      }
    },
    "/users/streak": {
      "get": {
        "description": "Get user's streak data.\n\n**Rate limit:** This operation can be called up to 60 times per hour for regular users.\n\n",
        "summary": "get streak",
        "tags": [
          "users"
        ],
        "parameters": [],
        "operationId": "users.getStreak",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "lastResultTimestamp": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "length": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "maxLength": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "hourOffset": {
                          "type": "integer",
                          "minimum": -11,
                          "maximum": 12
                        }
                      },
                      "required": [
                        "lastResultTimestamp",
                        "length",
                        "maxLength"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "ApeKey": []
          }
        ]
      }
    },
    "/quotes/isSubmissionEnabled": {
      "get": {
        "description": "Check if submissions are enabled.\n\n**Rate limit:** This operation can be called up to 60 times per minute for regular users.\n\n",
        "summary": "is submission enabled",
        "tags": [
          "quotes"
        ],
        "parameters": [],
        "operationId": "quotes.isSubmissionEnabled",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "isEnabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "isEnabled"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {
              "x-ratelimit-limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of allowed requests in the current period"
              },
              "x-ratelimit-remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of remaining requests in the current period"
              },
              "x-ratelimit-reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "The timestamp of the start of the next period"
              }
            }
          },
          "400": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Generic client error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required but not provided or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Authentication required but not provided or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Operation not permitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Operation not permitted"
                }
              }
            }
          },
          "422": {
            "description": "Request validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "validationErrors"
                  ],
                  "description": "Request validation failed"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "description": "Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Generic server error"
                }
              }
            }
          },
          "503": {
            "description": "Endpoint disabled or server is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errorId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errorId"
                  ],
                  "description": "Endpoint disabled or server is under maintenance"
                }
              }
            }
          }
        },
        "x-public": "yes",
        "security": []
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "ApeKey": {
        "type": "http",
        "scheme": "ApeKey"
      }
    }
  }
}